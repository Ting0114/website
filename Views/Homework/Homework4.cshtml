@{
    ViewData["Title"] = "Homework4";
}

<h1>Homework4</h1>
<h2>台北市景點</h2>
<div class="row mb-3">
    <div class="col-3">
        <select id="spots" class="form-control mb-3">
            <option value=""></option>
        </select>
    </div>
    <div class="col-6">
        <nav>
            <ul class="pagination" id="ul1">
            </ul>
        </nav>
    </div>
    <div class="col-3">
        <input type="search" placeholder="搜尋景點資料" class="form-control" id="inputSearch" />
    </div>
</div>
<div>
    <nav>
        <ul id="ul2">
        </ul>
    </nav>
</div>
<div class="row row-cols-1 row-cols-md-3 g-4" id="div1">
</div>

@section Styles {
    <style>
        nav ul {
            overflow-y: auto;
        }
    </style>
}
@section Scripts {
    <script>
        let categories = [];

        (async () => {
            const response = await fetch('https://localhost:7080/api/Categories');
            categories = await response.json();
            console.log(categories);
            // 顯示分類按鈕
            const ul2 = document.getElementById('ul2');
            ul2.innerHTML = categories.map(category => {
                return `<button class="btn btn-primary m-1" onclick="filterByCategory(${category.categoryId})">${category.categoryName}</button>`;
            }).join('');
        })();

        const divSpots = document.querySelector('#div1');
        const ulPaging = document.querySelector('#ul1');
        const inpSearch = document.querySelector('#inputSearch');
        const selectElement = document.getElementById('spots');

        let allSpots = [];

        const searchData = {
            "categoryId": 0,
            "keyword": "",
            "page": 1,
            "pageSize": 9,
            "sortBy": "SpotId",
            "sortType": "asc"
        };

        const pagingHandler = page => {
            searchData.page = page;
            loadSpots();
        };

        const loadSpots = async () => {
            const url = 'https://localhost:7080/api/Spots';

            const response = await fetch(url, {
                method: 'POST',
                body: JSON.stringify(searchData),
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();
            console.log(data);

            allSpots = data.spotsResult;

            // 顯示景點資料
            const spots = data.spotsResult.map(spot => {
                const { spotId, spotTitle, spotDescription, address, spotImage } = spot;
                return (`
                            <div class="col-md-4 mb-3">
                                <div class="card">
                                    <img src="${spotImage}" class="card-img-top" alt="${spotTitle}">
                                    <div class="card-body">
                                        <h5 class="card-title">${spotId} ${spotTitle}</h5>
                                        <p class="card-text">${spotDescription.length <= 100 ? spotDescription : spotDescription.substring(0, 100)}...</p>
                                    </div>
                                    <div class="card-footer">
                                        <small class="text-body-secondary">${address}</small>
                                    </div>
                                </div>
                            </div>
                        `);
            }).join("");
            divSpots.innerHTML = spots;

            // 顯示分頁按鈕
            let liPages = "";
            for (let i = 1; i <= data.totalPages; i++) {
                liPages += `<li class="page-item" onclick="pagingHandler(${i})"><a class="page-link">${i}</a></li>`;
            }
            ulPaging.innerHTML = liPages;

            // 更新下拉選單
            const count = data.spotsResult.length;
            selectElement.innerHTML = `<option value="">累積${count}筆資料</option>`;
            data.spotsResult.forEach(spot => {
                const option = document.createElement('option');
                option.value = spot.spotId;
                option.text = spot.spotTitle;
                selectElement.appendChild(option);
            });
        };

        selectElement.addEventListener('change', () => {
            const selectedSpotId = selectElement.value;
            const selectedSpot = allSpots.find(spot => spot.spotId == selectedSpotId);
            if (selectedSpot) {
                const { spotId, spotTitle, spotDescription, address, spotImage } = selectedSpot;
                divSpots.innerHTML = `
                            <div class="col-md-4 mb-3">
                                <div class="card">
                                    <img src="${spotImage}" class="card-img-top" alt="${spotTitle}">
                                    <div class="card-body">
                                        <h5 class="card-title">${spotId} ${spotTitle}</h5>
                                        <p class="card-text">${spotDescription}</p>
                                    </div>
                                    <div class="card-footer">
                                        <small class="text-body-secondary">${address}</small>
                                    </div>
                                </div>
                            </div>
                        `;
            }
        });
        // 點擊按鈕顯示對應分類
        const filterByCategory = async categoryId => {
            searchData.categoryId = categoryId;
            searchData.page = 1;
            await loadSpots();
        };

        const filterByKeyword = async keyword => {
            searchData.keyword = keyword;
            searchData.page = 1;
            await loadSpots();
        };

        const handleOtherButtonClick = async () => {
            searchData.categoryId = 0;
            searchData.keyword = "";
            await loadSpots();
        };

        document.addEventListener('DOMContentLoaded', loadSpots);

        inpSearch.addEventListener('keydown', event => {
            if (event.keyCode === 13) {
                searchData.keyword = event.target.value;
                loadSpots();
            }
        });
    </script>
}
